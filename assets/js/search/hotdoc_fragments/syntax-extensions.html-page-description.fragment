fragment_downloaded_cb({"url": "syntax-extensions.html#page-description", "fragment": "The syntax for a classic link in markdown is \nHotdoc will make some additional checks on the link destination and handle the following cases \nIf my_symbol_name is recognized as a valid symbol then at format time the destination will be modified to point to the url of this symbol s documentation. \nThe label can be empty in which case it will be set to the name of the symbol at format time \nIf my_other_page.markdown is a known subpage then the destination will be updated to point to its url at format time. \nHotdoc also adds an id attribute to all header links that don t have one with its value set as the value of the title lowercased with whitespaces replaced by hyphens and all non ASCII characters stripped away as well as characters forbidden in ids such as \nThis means that given this page named referenced.markdown \nOne can link to My subsection in a different page like this \nIf the link is made in the same page one can also use an empty link label which will get replaced by the contents of the title at format time. \nHotdoc extends the CommonMark syntax with the concept of transclusion lifted from MultiMarkdown. See this page for the beginning of a discussion about having this feature in CommonMark itself. \nThe syntax is \nincludes the file and parses it as markdown if the extension is either markdown or md. Any other extension or lack of will be included in a code block. \nincludes the lines comprised between start and end and parses them as markdown. \nfor example with my_file.c foo_bar retrieves the symbol named foo_bar in my_file.c and includes its content as a markdown code block. The range syntax can also be used in combination with this for example my_file.c foo_bar will only include the lines to in the local scope of foo_bar. \nThe file extension needs to be recognized and handled by a source code parsing hotdoc extension for this feature to work as described. \nTables are one of the most demanded feature that is still currently lacking in the CommonMark specification. \nI have proposed a pretty intrusive patch but obviously perfectly correct to add extension support in libcmark however getting it upstream is pretty involved and having the new version of cmark packaged in major linux distributions will also take time. \nIn the meantime my modified version of cmark is bundled in hotdoc I know D and supports a simple version of piped tables \nThis is recognized as a table with two header cells and a row containing two cells. \nThe include extension is also implemented this way. \n"});